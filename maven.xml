<project xmlns:j="jelly:core" xmlns:u="jelly:util" xmlns:ant="jelly:ant" xmlns:maven="jelly:maven" xmlns:deploy="deploy" default="info">
	
	<goal name="info">
		<echo message="GeoServer Build Script ${geoserver.version}"/>
		<echo message="-----------------------------"/>
		<echo message=""/>
		<echo message="Targets:"/>
		<echo message="  build: Compiles and tests all modules"/>
		<echo message="  release: Builds release artifacts for all modules"/>
		<echo message="  deployAll: Compiles and deploys all modules"/>
		<echo message="  cleanAll: Cleans all modules"/> 
		<echo message="  eclipseAll: Generated eclipse .classpath and .project for all modules"/> 
		
	</goal>
	
	<!-- build task, compiles all modules and runs tests -->
	<goal name="build">
		<j:set var="ignoreFailures" value="true"/>
		<j:set var="goal" value="clean,jar:install,test"/>
		<attainGoal name="multiproject:goal"/>
	</goal>

	<postGoal name="build">
		<!-- suck up all the unit test reports into a single directory -->
		<!-- TODO: get report plugin to work instead of hard coding paths -->
		<echo message="${maven.build.dir}"/>
		<ant:copy todir="${maven.build.dir}/test-reports" flatten="true">
			<ant:fileset dir="." includes="**/TEST-*.xml"/>
		</ant:copy>
	</postGoal>

	<goal name="release">
	</goal>

	<!-- module level binary release goal -->
	<goal name="releaseBin">
		<!--echo message="${maven.build.dir}"/>
		<echo message="${gs.release.bin.dir}"/>	
		<echo message="${gs.bin.dir}"/-->
		<maven:makeRelativePath path="${maven.build.dir}" var="build.dir" basedir="${basedir}"/>
		<echo message="${build.dir}"/>
		<maven:makeAbsolutePath path="${build.dir}" var="build.dir" basedir="${basedir}/.."/>
		<echo message="${build.dir}"/>

	</goal>


	<goal name="cleanAll">
		<!-- clean the root module -->
		<attainGoal name="clean"/>
		
		<!-- delete the geoserver deployment directory -->
		<ant:delete dir="geoserver"/>

		<!-- run multiproject clean -->
		<j:set var="ignoreFailures" value="true"/>
		<j:set var="goal" value="clean"/>
		<attainGoal name="multiproject:goal"/>
	</goal>

	<!-- multiproject goal to build + deploy war for each module -->
	<goal name="deployAll">
		<ant:mkdir dir="${maven.build.dir}/geoserver"/>

		<j:set var="ignoreFailures" value="true"/>
		<j:set var="goal" value="deploy"/>
		<attainGoal name="multiproject:goal"/>

		<!--ant:unwar dest="${maven.build.dir}/war">
			<ant:fileset dir="." includes="**/*.war"/>
		</ant:unwar-->
		<ant:jar destfile="${maven.build.dir}/${pom.artifactId}.war"
			 basedir="${gs.release.war.dir}"/>
  </goal>

	<!-- module level goal to deploy a single module -->
	<goal name="deploy">
		<j:set var="maven.test.skip" value="true"/>
		<attainGoal name="war"/>
		<!-- TODO: this hardcodes location, find a way to get at the parent target dir -->
		<ant:unwar dest="${basedir}/../target/geoserver">
			<ant:fileset dir="${maven.build.dir}" includes="*.war"/>
		</ant:unwar>
	</goal>

	<!-- executes eclipse over all modules -->
	<goal name="eclipseAll">
		<j:set var="ignoreFailures" value="true"/>
		<j:set var="goal" value="eclipse"/>
		<attainGoal name="multiproject:goal"/>
	</goal>

	<!-- executes eclipse:clean over all modules -->
	<goal name="eclipseCleanAll">
		<j:set var="ignoreFailures" value="true"/>
		<j:set var="goal" value="eclipse:clean"/>
		<attainGoal name="multiproject:goal"/>
	</goal>

</project>
