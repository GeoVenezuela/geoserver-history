<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.2//EN"
"http://www.oasis-open.org/docbook/xml/4.2/docbookx.dtd">
<article>
  <title>Testing Utility Documentation</title>

  <sect1>
    <title>Introduction</title>

    <para>The WFS Tester is an open source, command-line Java utility that
    will pass structured requests to a WFS, receive a response, and make
    minimal assessments of the response body. It could be described as the
    world's stupidest WFS client. It is useful to those who would like to run
    either structured regression or ad-hoc tests on installed web feature
    servers. If you want to get and use the WFS Tester, you must download it
    seperately from the GeoServer download page.</para>

    <para>Note: Much of the functionality offered by WFS Tester is now
    available in the TestWfsPost servlet, which runs by default in all
    instances of GeoServer. It is available at http://<emphasis
    role="bold">SERVER_ADDRESS</emphasis>:<emphasis
    role="bold">SERVER_PORT</emphasis>/geoserver/wfs/TestWfsPost. To use it
    just make sure that the request is going to the right location (it
    defaults to GetFeature), and write the XML requests directly into the
    browser window. The WFS Tester has a bit more functionality, as it can
    take request files as input, but it is much more difficult to use. It is
    not being developed further, but it does serve as a good source of sample
    code for how to post requests to a WFS with java. If anybody wishes to
    develop the tester further (like adding validation capabilities) we will
    certainly make the changes available for download. </para>
  </sect1>

  <sect1>
    <title>Running the Utility</title>

    <para>The WFS Tester is found in the wfsTester/libraries directory and is
    labeled wfsTester.jar. To run the utility, you should type:</para>

    <programlisting> java -cp <emphasis>$GEOSERVER_ROOT</emphasis>/libraries/wfsTester.jar org.vfny.wfsTest.utilities.InterfaceTest <emphasis>[flags...]</emphasis></programlisting>

    <para>where $GEOSERVER_ROOT is the root directory of your geoserver
    installation and possible [flags...] are:</para>

    <informaltable>
      <tgroup cols="3">
        <colspec align="left" colwidth="100" />

        <colspec align="left" colwidth="100" />

        <thead>
          <row>
            <entry align="center">Flag</entry>

            <entry align="center">Description</entry>

            <entry align="center">Options</entry>
          </row>
        </thead>

        <tbody>
          <row>
            <entry>-f</entry>

            <entry> interface test</entry>

            <entry>[root test data dir] [host file] [test specification
            file]</entry>
          </row>

          <row>
            <entry>-v</entry>

            <entry>verbose output</entry>

            <entry></entry>
          </row>

          <row>
            <entry>--help</entry>

            <entry>help</entry>

            <entry></entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable>

    <para>Example:</para>

    <programlisting>java -cp org.vfny.wfsTest.utilities.InterfaceTest -vf /home/rob/wfs/wfsTest/misc/data geoserver.xml test1.xml</programlisting>
  </sect1>

  <sect1>
    <title>Specifying Hosts</title>

    <para>The host specification files may be found in
    <emphasis>dataDirectory/hosts</emphasis>, where
    <emphasis>dataDirectory</emphasis> is the user-specified data
    directory.</para>

    <informaltable>
      <tgroup cols="2">
        <colspec align="left" colwidth="100" />

        <thead>
          <row>
            <entry align="center">Attribute</entry>

            <entry align="center">Description</entry>
          </row>
        </thead>

        <tbody>
          <row>
            <entry>hostName</entry>

            <entry>A descriptive host name.</entry>
          </row>

          <row>
            <entry>ip</entry>

            <entry>The request URI.</entry>
          </row>

          <row>
            <entry>port</entry>

            <entry>The host port; may leave empty.</entry>
          </row>

          <row>
            <entry>directory</entry>

            <entry>The subdirectory under which responses occur; this value is
            geoserver for all GeoServer installations.</entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable>

    <para>Example:</para>

    <programlisting>&lt;testHost xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;
    &lt;hostName&gt;VFNY GeoServer (external)&lt;/hostName&gt;
    &lt;ip&gt;beta.vfny.org&lt;/ip&gt;
    &lt;port&gt;81&lt;/port&gt;
    &lt;directory&gt;geoserver&lt;/directory&gt;
&lt;/testHost&gt;</programlisting>
  </sect1>

  <sect1>
    <title>Specifying Tests</title>

    <para><emphasis role="bold">OUT OF DATE.</emphasis></para>

    <para>The test specification files may be found in
    <emphasis>dataDirectory/tests</emphasis>, where
    <emphasis>dataDirectory</emphasis> is the user-specified data
    directory.</para>

    <informaltable>
      <tgroup cols="2">
        <colspec align="left" colwidth="100" />

        <thead>
          <row>
            <entry align="center">Attribute</entry>

            <entry align="center">Description</entry>
          </row>
        </thead>

        <tbody>
          <row>
            <entry>testTitle</entry>

            <entry>A descriptive title for the test; displayed while
            running.</entry>
          </row>

          <row>
            <entry>requestInterface</entry>

            <entry>The request interface to be tested: GetCapabilities,
            DescribeFeatureType, or GetFeature.</entry>
          </row>

          <row>
            <entry>requestFile</entry>

            <entry>Name of the text file containing the request (KVP or XML),
            found in <emphasis>dataDirectory/requests</emphasis>.</entry>
          </row>

          <row>
            <entry>targetSchemaFile</entry>

            <entry>Name of the schema file with which to validate the
            response, found in
            <emphasis>dataDirectory/schemas</emphasis>.</entry>
          </row>

          <row>
            <entry>targetOutputFile</entry>

            <entry>Name of the text file containing exact target output, found
            in <emphasis>dataDirectory/output</emphasis>.</entry>
          </row>

          <row>
            <entry>isPost</entry>

            <entry>Value indicating whether or not the request is POST or GET;
            may be 'true' or 'false'.</entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable>

    <para>Example:</para>

    <programlisting>&lt;testSpecification xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" &gt;
    &lt;testTitle&gt;Test GetFeature (subway)&lt;/testTitle&gt;
    &lt;requestInterface&gt;GetFeature&lt;/requestInterface&gt;
    &lt;requestFile&gt;getFeature4.txt&lt;/requestFile&gt;
    &lt;targetSchemaFile /&gt;
    &lt;targetOutputFile /&gt;
    &lt;isPost&gt;true&lt;/isPost&gt;
&lt;/testSpecification&gt;</programlisting>
  </sect1>

  <sect1>
    <title>Conclusion</title>

    <para>Keep in mind that this is only a helper utility and should not in
    any way be considered a definitive indication of specification compliance.
    There are no plans to further develop the parsing capabilities of this
    tool. If you would like to contribute to its development, its source code
    is availible on CVS.</para>
  </sect1>
</article>