<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">

<beans>

	<!--  
		resources
	 -->
	<bean id="resourceLoader" class="org.geoserver.platform.GeoServerResourceLoader"/>
	
	<!-- extensions -->
	<bean id="extensions" class="org.geoserver.platform.GeoServerExtensions"/>
	
	<!-- 
		core modules
	 -->
	 
	<!-- configuration module -->
	<bean id="config"
		class="org.vfny.geoserver.global.Config"/>
		
	<!-- geoserver module -->
	<bean id="geoServer"
		class="org.vfny.geoserver.global.GeoServer">
		<constructor-arg ref="config"/>
	</bean>
	<bean id="globalConfig"
		class="org.vfny.geoserver.config.GlobalConfig">
		<constructor-arg ref="geoServer"/>
	</bean>	
	
	<!-- data module -->
	<bean id="data"
		class="org.vfny.geoserver.global.Data">
		<constructor-arg ref="config"/>
		<constructor-arg ref="geoServer"/>
	</bean>
	<alias name="data" alias="catalog"/>
	
	<bean id="dataConfig"
		class="org.vfny.geoserver.config.DataConfig">
		<constructor-arg ref="data"/>
	</bean>	

	<!-- this registers the above modules with the servlet context
		 it is around to keep the struts app happy as we move away from 
		 servlets  -->
	<bean id="dataRegisterar"
		class="org.vfny.geoserver.global.GeoServerServletContextInitializer">
		
		<constructor-arg type="java.lang.String" value="DATA"/>
 		<constructor-arg ref="data"/>
 	</bean>
	<bean id="dataConfigRegisterar"
		class="org.vfny.geoserver.global.GeoServerServletContextInitializer">
		
		<constructor-arg type="java.lang.String" value="Config.Data"/>
 		<constructor-arg ref="dataConfig"/>
 	</bean>
	<bean id="globalConfigRegisterar"
		class="org.vfny.geoserver.global.GeoServerServletContextInitializer">
		
		<constructor-arg type="java.lang.String" value="Config.Global"/>
 		<constructor-arg ref="globalConfig"/>
 	</bean>
 	
	<bean id="geoServerRegisterar"
		class="org.vfny.geoserver.global.GeoServerServletContextInitializer">
		
		<constructor-arg type="java.lang.String" value="GeoServer"/>
 		<constructor-arg ref="geoServer"/>
 	</bean>
 	
 	<!-- 
		service strategies 
	-->
	<bean id="serviceStrategyFactory" 
		class="org.vfny.geoserver.servlets.ServiceStrategyFactory">
		<constructor-arg ref="geoServer"/>
	</bean>
	
	<bean id="speedServiceStrategy"
		class="org.vfny.geoserver.servlets.SpeedStrategy"/>
		
	<bean id="fileServiceStrategy"
		class="org.vfny.geoserver.servlets.FileStrategy"/>
		
	<bean id="bufferServiceStrategy"
		class="org.vfny.geoserver.servlets.BufferStrategy"/>
		
	<bean id="partialBufferServiceStrategy"
		class="org.vfny.geoserver.servlets.PartialBufferStrategy"/>
    
    <bean id="partialBufferServiceStrategy2"
        class="org.vfny.geoserver.servlets.PartialBufferStrategy2"/>
		
	<!-- 
		custom property editors
	 -->
	<bean id="customEditorConfigurer" 
   	 class="org.springframework.beans.factory.config.CustomEditorConfigurer">
	  	<property name="customEditors">
	      <map>
	      	  <entry key="org.geotools.util.Version">
	        	<bean class="org.geoserver.platform.util.VersionPropertyEditor"/>
	         </entry>
	      </map>
	    </property>
    </bean>
		
		
    <!--  dispatcher -->
	<bean id="dispatcher" class="org.geoserver.ows.Dispatcher">
      <!-- 
        See the applicationSecurityContext document. You can safely remove this
        if in need for playing with a non secure version of Geoserver
       -->
      <property name="securityInterceptor">
        <ref bean="operationSecurityInterceptor"/>
      </property>
    </bean>
    
    
</beans>