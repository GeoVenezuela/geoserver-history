## This log4j configuration file needs to stay here, and is only used BRIEFLY during geoserver
## startup.  Initialization looks something like this:
##
##  1)  Web container startup
##  2)  geoserver.war web.xml executes org.geoserver.logging.LoggingStartupContextListener
##  3)  o.g.l.LSCL attempts to redirect all logging to commons-logging, which (in the
##     commons-logging.properties file) is set up
##     to redirect to log4j, which is configured by THIS file.
##     No file logging is performed, only stdout logging.
##  4)  geoserver.war is initialized, during which Spring creates beans, etc.
##  5)  when the org.vfny.geoserver.global.GeoServer bean is created, GeoServer.configureGeoServerLogging()
##     gets called.  When this gets called the REAL log4j logging files are initialized, from the data dir.

log4j.rootLogger=WARN, stdout

log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%d{dd MMM HH:mm:ss} %p [%c{2}] - %m%n

log4j.category.org.geotools=WARN
log4j.category.org.geotools.factory=WARN

log4j.category.org.geoserver=INFO
log4j.category.org.vfny.geoserver=INFO
log4j.category.org.vfny.geoserver.config.web.tiles.definition.MultipleDefinitionsFactory=WARN
log4j.category.org.vfny.geoserver.global=WARN

log4j.category.org.springframework=WARN
log4j.category.org.apache.struts=WARN
