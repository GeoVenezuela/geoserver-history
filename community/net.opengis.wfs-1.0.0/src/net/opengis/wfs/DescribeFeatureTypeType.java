/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package net.opengis.wfs;

import java.util.List;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EObject;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Describe Feature Type Type</b></em>'.
 * <!-- end-user-doc -->
 *
 * <!-- begin-model-doc -->
 * 
 *             The DescribeFeatureType operation allows a client application
 *             to request that a Web Feature Service describe one or more
 *             feature types.   A Web Feature Service must be able to generate
 *             feature descriptions as valid GML2 application schemas.
 * 
 *             The schemas generated by the DescribeFeatureType operation can
 *             be used by a client application to validate the output.
 * 
 *             Feature instances within the WFS interface must be specified
 *             using GML2.  The schema of feature instances specified within
 *             the WFS interface must validate against the feature schemas
 *             generated by the DescribeFeatureType request.
 * <!-- end-model-doc -->
 *
 * <p>
 * The following features are supported:
 * <ul>
 *   <li>{@link net.opengis.wfs.DescribeFeatureTypeType#getTypeName <em>Type Name</em>}</li>
 *   <li>{@link net.opengis.wfs.DescribeFeatureTypeType#getOutputFormat <em>Output Format</em>}</li>
 *   <li>{@link net.opengis.wfs.DescribeFeatureTypeType#getService <em>Service</em>}</li>
 *   <li>{@link net.opengis.wfs.DescribeFeatureTypeType#getVersion <em>Version</em>}</li>
 * </ul>
 * </p>
 *
 * @see net.opengis.wfs.WFSPackage#getDescribeFeatureTypeType()
 * @model extendedMetaData="name='DescribeFeatureTypeType' kind='elementOnly'"
 * @generated
 */
public interface DescribeFeatureTypeType extends EObject{
	/**
	 * Returns the value of the '<em><b>Type Name</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * <!-- begin-model-doc -->
	 * 
	 *                   The TypeName element is used to enumerate the feature types
	 *                   to be described.  If no TypeName elements are specified
	 *                   then all features should be described.
	 * <!-- end-model-doc -->
	 * @return the value of the '<em>Type Name</em>' attribute.
	 * @see #setTypeName(Object)
	 * @see net.opengis.wfs.WFSPackage#getDescribeFeatureTypeType_TypeName()
	 * @model type="javax.xml.namespace.QName"
	 * 
	 */
	EList getTypeName();

	/**
	 * Returns the value of the '<em><b>Output Format</b></em>' attribute.
	 * The default value is <code>"XMLSCHEMA"</code>.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * <!-- begin-model-doc -->
	 * 
	 *                The outputFormat attribute is used to specify what schema
	 *                description language should be used to describe features.
	 *                The default value of XMLSCHEMA means that the Web Feature
	 *                Service must generate a GML2 application schema that can
	 *                be used to validate the GML2 output of a GetFeature request
	 *                or feature instances specified in Transaction operations.
	 * <!-- end-model-doc -->
	 * @return the value of the '<em>Output Format</em>' attribute.
	 * @see #isSetOutputFormat()
	 * @see #unsetOutputFormat()
	 * @see #setOutputFormat(String)
	 * @see net.opengis.wfs.WFSPackage#getDescribeFeatureTypeType_OutputFormat()
	 * @model default="XMLSCHEMA" unique="false" unsettable="true" dataType="org.eclipse.emf.ecore.xml.type.String"
	 *        extendedMetaData="kind='attribute' name='outputFormat'"
	 * @generated
	 */
	String getOutputFormat();

	/**
	 * Sets the value of the '{@link net.opengis.wfs.DescribeFeatureTypeType#getOutputFormat <em>Output Format</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @param value the new value of the '<em>Output Format</em>' attribute.
	 * @see #isSetOutputFormat()
	 * @see #unsetOutputFormat()
	 * @see #getOutputFormat()
	 * @generated
	 */
	void setOutputFormat(String value);

	/**
	 * Unsets the value of the '{@link net.opengis.wfs.DescribeFeatureTypeType#getOutputFormat <em>Output Format</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #isSetOutputFormat()
	 * @see #getOutputFormat()
	 * @see #setOutputFormat(String)
	 * @generated
	 */
	void unsetOutputFormat();

	/**
	 * Returns whether the value of the '{@link net.opengis.wfs.DescribeFeatureTypeType#getOutputFormat <em>Output Format</em>}' attribute is set.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return whether the value of the '<em>Output Format</em>' attribute is set.
	 * @see #unsetOutputFormat()
	 * @see #getOutputFormat()
	 * @see #setOutputFormat(String)
	 * @generated
	 */
	boolean isSetOutputFormat();

	/**
	 * Returns the value of the '<em><b>Service</b></em>' attribute.
	 * The default value is <code>"WFS"</code>.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Service</em>' attribute isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Service</em>' attribute.
	 * @see #isSetService()
	 * @see #unsetService()
	 * @see #setService(String)
	 * @see net.opengis.wfs.WFSPackage#getDescribeFeatureTypeType_Service()
	 * @model default="WFS" unique="false" unsettable="true" dataType="org.eclipse.emf.ecore.xml.type.String" required="true"
	 *        extendedMetaData="kind='attribute' name='service'"
	 * @generated
	 */
	String getService();

	/**
	 * Sets the value of the '{@link net.opengis.wfs.DescribeFeatureTypeType#getService <em>Service</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @param value the new value of the '<em>Service</em>' attribute.
	 * @see #isSetService()
	 * @see #unsetService()
	 * @see #getService()
	 * @generated
	 */
	void setService(String value);

	/**
	 * Unsets the value of the '{@link net.opengis.wfs.DescribeFeatureTypeType#getService <em>Service</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #isSetService()
	 * @see #getService()
	 * @see #setService(String)
	 * @generated
	 */
	void unsetService();

	/**
	 * Returns whether the value of the '{@link net.opengis.wfs.DescribeFeatureTypeType#getService <em>Service</em>}' attribute is set.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return whether the value of the '<em>Service</em>' attribute is set.
	 * @see #unsetService()
	 * @see #getService()
	 * @see #setService(String)
	 * @generated
	 */
	boolean isSetService();

	/**
	 * Returns the value of the '<em><b>Version</b></em>' attribute.
	 * The default value is <code>"1.0.0"</code>.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Version</em>' attribute isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Version</em>' attribute.
	 * @see #isSetVersion()
	 * @see #unsetVersion()
	 * @see #setVersion(String)
	 * @see net.opengis.wfs.WFSPackage#getDescribeFeatureTypeType_Version()
	 * @model default="1.0.0" unique="false" unsettable="true" dataType="org.eclipse.emf.ecore.xml.type.String" required="true"
	 *        extendedMetaData="kind='attribute' name='version'"
	 * @generated
	 */
	String getVersion();

	/**
	 * Sets the value of the '{@link net.opengis.wfs.DescribeFeatureTypeType#getVersion <em>Version</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @param value the new value of the '<em>Version</em>' attribute.
	 * @see #isSetVersion()
	 * @see #unsetVersion()
	 * @see #getVersion()
	 * @generated
	 */
	void setVersion(String value);

	/**
	 * Unsets the value of the '{@link net.opengis.wfs.DescribeFeatureTypeType#getVersion <em>Version</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #isSetVersion()
	 * @see #getVersion()
	 * @see #setVersion(String)
	 * @generated
	 */
	void unsetVersion();

	/**
	 * Returns whether the value of the '{@link net.opengis.wfs.DescribeFeatureTypeType#getVersion <em>Version</em>}' attribute is set.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return whether the value of the '<em>Version</em>' attribute is set.
	 * @see #unsetVersion()
	 * @see #getVersion()
	 * @see #setVersion(String)
	 * @generated
	 */
	boolean isSetVersion();

} // DescribeFeatureTypeType
