<html><!-- #BeginTemplate "/Templates/main.dwt" -->
<head>
<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta content="Rob Hranac" name="author">
<!-- #BeginEditable "doctitle" --> 
<title>the GeoServer Project :: Documentation</title>
<!-- #EndEditable --> 
<style type="text/css">
<!--
.title {  font-family: Arial, Helvetica, sans-serif; font-size: 14pt; color: #FFFFFF; font-weight: bold}
.navigation {  font-family: Arial, Helvetica, sans-serif; font-size: 12px; font-weight: bold; color: #333366}
.header { font-family: Arial, Helvetica, sans-serif; font-size: 16px; font-weight: bold; color: #333366 }
.finePrint { font-family: Arial, Helvetica, sans-serif; font-size: 9px; font-weight: lighter; color: #999999}
.navigationSub { font-family: Arial, Helvetica, sans-serif; font-size: 10pt; font-weight: normal; color: #333366 }
.titleSection { font-family: Arial, Helvetica, sans-serif; font-size: 14pt; color: #333366; font-weight: bold }
.modifyMe {  color: #FF0000}
-->
</style>
</head>
<body vlink="#333366" alink="#333366" link="#333366" text="#000000" bgcolor="#ffffff">
<table cellspacing="5" width="100%" border="0">
  <tr> 
    <td colspan="2">
      <table width="100%" border="0" cellspacing="0" cellpadding="0">
        <tr> 
          <td><a href="http://geoserver.sourceforge.net"><img border="0" align="left" src="http://geoserver.sourceforge.net/html/images/logo.gif"></a></td>
          <td align="right" valign="top"><font color="#333366"><strong class="header">Documentation</strong></font></td>
        </tr>
      </table>
    </td>
  </tr>
  <tr> 
    <td colspan="2"> 
      <hr size="1" noshade>
    </td>
  </tr>
  <tr> 
    <td valign="top" width="188" height="272"> 
      <title></title>
      <table width="100%" border="0" cellspacing="0" cellpadding="0" height="100%">
        <tr>
          <td valign="top"> 
            <table cellspacing="5" border="0">
              <tr> 
                <th align="left" colspan="2" height="8"><font color="#333366"><strong class="navigation">User</strong></font></th>
              </tr>
              <tr> 
                <td width="11" align="center"></td>
                <td width="165" class="navigationSub"><font size="-1"><a href="install.htm">Install</a></font></td>
              </tr>
              <tr> 
                <td width="11" align="center"></td>
                <td width="165" class="navigationSub"><font size="-1"><a href="schemaTutorial.htm">Schema 
                  Tutorial</a></font></td>
              </tr>
               <tr> 
                <td width="11" align="center"></td>
                <td width="165" class="navigationSub"><font size="-1"><a href="advanced.htm">Advanced</a></font></td>
              </tr>
            </table>
            <table cellspacing="5" border="0">
              <tr> 
                <th align="left" colspan="2" height="8"><font color="#333366"><strong class="navigation">Developer 
                  </strong></font></th>
              </tr>
              <tr> 
                <td width="11" align="center"></td>
                <td width="165" class="navigationSub"><font size="-1"><a href="../developer/build.htm">Build</a></font></td>
              </tr>
              <tr> 
                <td width="11" align="center" height="16"></td>
                <td width="165" height="16" class="navigationSub"><a href="../developer/testingUtility.htm">Testing 
                  Utility</a></td>
              </tr>
              <tr> 
                <td width="11" align="center" height="16"></td>
                <td width="165" height="16" class="navigationSub"><a href="../developer/license.htm">License</a></td>
              </tr>
              <tr> 
                <td width="11" align="center" height="16"></td>
                <td width="165" height="16" class="navigationSub"><font size="-1"><a href="http://geoserver.sourceforge.net/documentation/javadocs/index.html">API</a></font></td>
              </tr>
              <tr> 
                <td width="11" align="center"></td>
                <td width="165" class="navigationSub"><font size="-1"><a href="http://www.opengis.org/techno/specs/02-058.pdf">WFS 
                  Specification</a></font></td>
              </tr>
            </table>
          </td>
        </tr>
        <tr>
          <td valign="bottom"> 
            <p><span class="finePrint">JaDva, Servlets, J2EE, EJB, JDBC, JNDI, 
              JTA, Sun, Sun Microsystems are trademarks or registered trademarks 
              of Sun Microsystems, Inc. in the United States and in other countries. 
              XML, XML Schema, XSLT and related standards are trademarks or registered 
              trademarks of MIT, INRIA, Keio or others, and a product of the World 
              Wide Web Consortium. All other product names mentioned herein are 
              trademarks of their respective owners.</span></p>
            <p>&nbsp;</p>
          </td>
        </tr>
      </table>
      
    </td>
    <td valign="top" width="961" height="272">
<table width="100%" cellpadding="5" cellspacing="5" border="0">
        <tr> 
          <td class="titleSection"><!-- #BeginEditable "Title"  -->Advanced 
      Configuration <!-- #EndEditable --></td>
        </tr>
      </table>
      <!-- #BeginEditable "main" --> 
      <table width="100%" cellpadding="5" cellspacing="5" border="0">
       <a name="additional"></a>
        <tr> 
          <td bgcolor="#333366" class="title">Additional options</td>
        </tr>
        <tr> 
          <td height="67"> 
            <blockquote> 
             <p>Several advanced configuration options have been added to GeoServer:</p>

	     <ul>
              <li>LoggingLevel allows easier configuration of GeoServer's logging. 
	      Possible values include FINEST, FINER, CONFIG, INFO, WARNING, and SEVERE 
	      (in order from most messages to least).  FINEST should not be used except
	      for tracking difficult bugs, as it generates a lot of messages and will
	      quickly fill up your log.  Logging still needs a bit of work, to have the
	      correct meaningful messages for each level, but the current logging provides
	      a good start.  If the LoggingLevel is not set then GeoServer will just use 
	      the values in your jre's logging.properties file.  To set the logging just 
	      add a line like the following to your configuration.xml file:
	       <br>
	       <br>
	        <i> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;LoggingLevel&gt;FINER&lt;/LoggingLevel&gt;</i> 
              </li>
               <br>
	      <li>Verbose, if set to true, outputs the xml with newlines and
	       indents.  If set to false, or not present in the configuration.xml 
	       file, then no newlines or indents will be contained in the output.
	       <br>
	       <br>
	       <i>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;Verbose value="true"&gt;</i>
	      </li>
              <br>
	      <li>MaxFeatures allows the user to specify the maximum
	      number of features to return on a getFeatures request.  
	      Geoserver is far from optimized for speed and memory, so 
	      extremely large requests can certainly be quite slow or cause
	      it to choke.  That limit depends on the machine it's running
	      on, so users should figure out how many they want to return.
	      To specify MaxFeatures of 3000 add the following line to your
	      configuration.xml: 
	      <br><br><i>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;MaxFeatures&gt;3000 &lt;/MaxFeatures&gt;</i>
	      </li>
	      <br>
	       <li>PrefixDelimiter allows the user to change the default
	       delimiter (the <i>--</i> of <i>topp--road</i>) between the namespace prefix and the feature 
	       name in the featureType folder.  Most users will not need this at all, the
	       <i>--</i> should work fine in most situations.  If your operating system doesn't like
	       it, or if you have features that have a -- in their name, then switching
	       the prefix delimiter is recommended.  Any text string can be used, GeoServer
	       just looks for the first instance of it in the name of the folder.  This tag
	       is also useful for those who used the topp:road convention of 0.94.  We did
	       away with it because resin did not like directories with a ':' in their name.
	       But if you'd still like to use it, you can just add a line to your configuration.xml:
	      <br><br><i>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;PrefixDelimiter&gt;:&lt;/PrefixDelimiter&gt;</i>
	      </li>
	       <br>
	      <li>The NumDecimals element can be used to set how many places
	      past the decimal are returned in a getFeature response.  
	      To set to two decimal places add the following to your configuration.xml:
	      <br><br><i>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;NumDecimals&gt;2 &lt;/NumDecimals&gt;</i>
	      </li>
	      <br>
	     </ul>
	    </blockquote>
          </td>
        </tr>
      </table>
      <table width="100%" cellpadding="5" cellspacing="5" border="0" height="90">
       <a name="namespaces"></a>
        <tr> 
          <td bgcolor="#333366" class="title">Multiple Namespaces</td>
        </tr>
        <tr> 
          <td height="56"> 
            <blockquote>
	    <p>The wfs 1.0.0 specification requires the use of namespaces,
	    so geoserver now supports multiple namespaces.  If you do not
	    care about namespaces, then just install things the old way,
	    and everything should work.  It will use a prefix of myns 
	    and a uri consisting of the OnlineResource element of the
	    configuration.xml file with myns appended.</p>

	    <p>If you just want the default namespace to be different, 
	    then you only need to add an element such as the following
	    to the configuration.xml file:</p>
	     <blockquote>
	      <p><i>
	      &nbsp;&nbsp;&lt;Namespace default=&quot;true&quot;/&gt;
	      <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;prefix=&quot;topp&quot;
	      <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;uri=&quot;http://www.openplans.org/topp&quot;/&gt;
	      </i><p>
	     </blockquote>
	     GeoServer will then use <i>topp</i> for the prefix, and the <i>http://www.openplans.org/topp</i> as the uri.</p>

	     <p>If you need multiple namespaces, then you must change your
	     featureTypes folders in misc/data.  Instead of naming the
	     folders just by their feature names, you must also include
	     the prefix you want them to use.  Each prefix that you use
	     in your featureTypes folder must have a matching Namespace
	     element in configuration.xml.  So if you had a rail and a
	     road feature in different namespaces you would set it up as
	     follows:</p>

	     First add two tags to configuration.xml:
 	      <blockquote>
	       <p><i>&nbsp;&nbsp;&lt;Namespace prefix=&quot;topp&quot;
	        <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;uri=&quot;http://www.openplans.org/topp&quot;/&gt;
		<br>&nbsp;&nbsp;&lt;Namespace prefix=&quot;ns02&quot;
		<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;uri=&quot;http://www.otherserver.org/nmsp&quot;/&gt;</i>
	       <p>
	     </blockquote>
	     Then insert folders in the featureTypes folder named
	     <i>topp--road</i> and <i>ns02--rail</i>.  The info.xml and schema.xml files in these
	     folders are the same as normal namespace files.  GeoServer uses the prefix
	     to determine which Namespace element to map it to.
	    </blockquote>
          </td>
        </tr>
      </table>

      <table width="100%" cellpadding="5" cellspacing="5" border="0">
      <a name="shapefile"></a>	 
        <tr> 
          <td bgcolor="#333366" class="title">Shapefile support</td>
	 
        </tr>
        <tr>
          <td height="45"> 
	  
            <blockquote> The 0.96 release includes a first attempt at shapefile
	    support.  Postgis remains the recommended geoserver datasource, due
	    to its speed and transactional capabilities.  But for those users 
	    wishing to avoid the lengthy postgis install, who just want to get 
	    geoserver up and running, shapefiles provide a good alternative.  
	    Large shapefiles have not been tested too extensively, so we'd 
	    appreciate reports on how it goes.  And much thanks goes out to 
	    the <a href="http://geotools.org">Geotools</a> team, as we are
	    just plugging in their hard work.  Ian Schneider deserves special
	    mention for his work to get the geotools shapefile module ready
	    to go into geoserver.  <p>To use shapefiles instead of postgis, the
	    info.xml file must be modified.  To use shapefiles include the
	    url to the location of the .shp file as follows:
	     <blockquote>
	      <p><i>
	       &nbsp;&nbsp;&nbsp;&nbsp;&lt;DatasourceParams&gt;<br>
                     &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;url&gt;file:/home/chris/road.shp&lt;/url&gt; 
                    <br>
                    &nbsp;&nbsp;&nbsp;&nbsp;&lt;/DatasourceParams&gt;<br>
	      </i><p>
	     </blockquote>

           If you can store the
	    .shp, .dbx and .shx files in the same directory as info.xml then
	    the filename tag can be used as a shortcut, the url will be 
	    constructed automatically using that directory.:
	     <blockquote>
	      <p><i>
	       &nbsp;&nbsp;&nbsp;&nbsp;&lt;DatasourceParams&gt;<br>
                     &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;filename&gt;road.shp&lt;/filename&gt; 
                    <br>
                    &nbsp;&nbsp;&nbsp;&nbsp;&lt;/DatasourceParams&gt;<br>
	      </i><p>
	     </blockquote>
           </blockquote>
         </td>
        </tr>
      </table>
 <table width="100%" cellpadding="5" cellspacing="5" border="0">
      <a name="oracle"></a>	 
        <tr> 
          <td bgcolor="#333366" class="title">Oracle support</td>
	 
        </tr>
        <tr>
          <td height="45"> 
	  
            <blockquote> The 0.98 release includes a new oracle datasource,
	    contributed by Sean Geoghegan.  It includes support of all ogc
	    filters, connection pooling, and transactional capabilities.  To use
	    the Oracle Datasource the info.xml file must have the following 
	    values for the DatasourceParams:
	     <table width="91%" border="0" cellspacing="3" cellpadding="3" align="center">
                <tr align="left" valign="top"> 
                  <td width="20%" height="20"><b>Param Name</b></td>
                  <td width="74%" height="20"><b>Description</b></td>
                </tr>
	     <tr align="left" valign="top">
                  <td width="12%" height="11">host</td>
                  <td width="74%" height="11">The machine which the Oracle 
		  instance is running on.</td>
                </tr>
                <tr align="left" valign="top">
                  <td width="12%" height="17">port</td>
                  <td width="74%" height="17">The port the Oracle instance is 
		  running on.  The default is 1521</td>
                </tr>
                <tr align="left" valign="top">
                  <td width="12%" height="26">user</td>
                  <td width="74%" height="26">The user to connect with.</td>
                </tr>
                <tr align="left" valign="top">
                  <td width="12%" height="17">passwd</td>
                  <td width="74%" height="17">The password to connect with.</td>
                </tr>
		<tr align="left" valign="top">
                  <td width="12%" height="17">dbtype</td>
                  <td width="74%" height="17">Must be 'oracle' to use the 
		  oracle datasource.</td>
                </tr>
		<tr align="left" valign="top">
                  <td width="12%" height="17">table</td>
                  <td width="74%" height="17">The name of the Oracle table to 
		  load features from, must have an SDO_GEOMETRY column</td>
                </tr>
		<tr align="left" valign="top">
                  <td width="12%" height="17">instance</td>
                  <td width="74%" height="17">The Oracle instance name, should be 
		  the same as the SERVICE ID</td>
                </tr>
              </table>
	      Additionally, two jars are required in the geoserver/lib directory.
	      As Oracle is not open source we can not distribute these, but you 
	      should be able to find them, either somewhere within your oracle
	      install, or on the <a href="http://otn.oracle.com">Oracle Technology 
	      Network</a>.
	      The two jars you need are classes12.jar, which contains the jdbc
	      classes, and sdoapi.jar, which contains the spatial api jars.  
	      If you recieve an uncaught exception - NoClassDefFoundError, then
	      you probably have the jar in the wrong place or the wrong jars.
	      And please don't hesitate to email the geoserver-devel@lists.sf.net
	      list with any problems. The DatasourceParams element of the info.xml 
	      file should look as follows:
	      <blockquote>
	      <p><i>
	        &nbsp;&nbsp;&nbsp;&nbsp;&lt;DatasourceParams&gt;<br>
                     &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;host&gt;localhost&lt;/host&gt; 
                    <br>
                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;port&gt;1521&lt;/port&gt; <br>
                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;instance&gt;test&lt;/instance&gt; 
                    <br>
                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;user&gt;test&lt;/user&gt; <br>
                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;passwd&gt;test&lt;/passwd&gt; <br>
                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;table&gt;river&lt;/table&gt; 
                    <br>
                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;dbtype&gt;oracle&lt;/dbtype&gt; 
                    <br>
                    &nbsp;&nbsp;&nbsp;&nbsp;&lt;/DatasourceParams&gt;<br>
                   
                </blockquote>
	     </blockquote>
         </td>
        </tr>
      </table>
      <table width="100%" cellpadding="5" cellspacing="5" border="0">
       <a name="z3950"></a>
        <tr> 
          <td bgcolor="#333366" class="title">z39.50 Module</td>
        </tr>
        <tr> 
          <td height="45"> 
            <blockquote>The zserver module integrates
	    a z39.50 geo profile metadata server into GeoServer.  It 
	    allows z39.50 clients to search for specific FGDC meta 
	    information about the data served by GeoServer.  For more
	    information on metadata, click <a href="http://www.fgdc.gov/metadata">
	    here.</a>
	    In order to get your server on the FGDC clearinghouse, go
	    <a href="http://www.fgdc.gov/clearinghouse/tutorials/howto.html">here</a>.
	    The zserver module is designed to eventually be an integrated 
	    alternative to the Isite implementation.
	    <p>In order
	    to run the zserver module, you must create the appropriate
	    metadata.  Eventually we hope to come up with a 
	    configuration tool to integrate metadata preperation, but
	    for now you must use the mp tool.  Information on preparing
	    metadata is available <a href=http://www.fgdc.gov/clearinghouse/tutorials/metadata.html>here</a>.  
	    </p>

	    <p>It is best to prepare your metadata in text, html, xml and
	    sgml.  ZServer requires text and xml (it uses xml for the
	    parser, and text for the default return).  Prepare the
	    metadata, and then rename each of the files metadata, with
	    their appropriate suffixes (metadata.xml, metadata.html, 
	    etc.).  Then copy these files to the appropriate featureType
	    directories in the data folder.  To make GeoServer run the
	    zserver module, add the <ZServer> tag to the configuration.xml
	    file.  The zserver runs on port 5210 by default, but that
	    is now user configurable with the Port tag.  If you would like
	    your zserver to run on port 3210, then the appropriate tags 
	    would be:<br>
	      <i> &nbsp;&nbsp;&nbsp;&nbsp;&lt;ZServer&gt;<br>
	      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;Port&gt;3210&lt;/Port&gt;
	     <br> &nbsp;&nbsp;&nbsp;&nbsp;&lt;/ZServer&gt;</i><br>
	    The best way to test to make sure it is working
	    is to download Isite and use its client applications.  A 
	    test query of 'rail' on either title or everything should 
	    return the test document.  Only the US's FGDC metadata is 
	    currently processed, but development in the future may include
	    others.
            </blockquote>
          </td>
        </tr>
      </table>
      <table width="100%" cellpadding="5" cellspacing="5" border="0">
       <a name="international"></a>       
        <tr> 
          <td bgcolor="#333366" class="title">Internationalization</td>
        </tr>
        <tr> 
          <td height="45"> 
            <blockquote>
	    The 0.97 release includes better support for international character set
	    encoding.  If you have problems with this don't hesitate to ask for support;
	    We've tried to resolve the issues, but we also don't have the capacity to 
	    carry out extensive tests for different languages, so we rely on our users
	    to let us know when things go wrong.  Hopefully the fixes thus far should
	    be sufficient for most users. To use the new internationalization
	    fixes, the easiest way is to add a &lt;CharSet&gt; element to the 
	    configuration.xml file that contains the encoding you wish to use:<br><br>
	     <i> &nbsp;&nbsp;&nbsp;&nbsp;&lt;CharSet&gt;iso-8859-1&lt;/CharSet&gt;</i><br><br>
	     This will set the mime encoding and the xml header encoding to that charset, 
	     as well as setting the charSet property for all instances of postgis.  If
	     no CharSet element is found then the default is UTF-8 for the return xml, and
	     no charset property for postgis.  If you would like to still return UTF-8, 
	     but would like your database to read the correct character sets, you can just
	     set the &lt;charset&gt; element in the info.xml file of the individual 
	     featureType.  This allows access to different databases of different encodings.
	     If the charset element of an info.xml file is set then it overrides the 
	     CharSet set in the configuration.xml file.  <p>
	     This is a new feature, and has not been tested too extensively, so we'd 
	     appreciate user feedback on it.  If you'd like it set up differently just
	     let us know, as the user interface has not been thought through too  
	     extensively.  Also be aware that we currently do no checking to see if
	     the charsets are valid.  If you set a bad charset then GeoServer will
	     fail, miserably, with a number of strange errors.  We will work to clean
	     that up a bit, but need to find a good way to figure out which charsets
	     will work with the various places they are used - mime encoding, xml 
	     declaration and the postgis jdbc driver.  Please send email to the
	     list at geoserver-devel@lists.sourceforge.net, or to the geoserver team:
	     geoserver@openplans.org.  
	   </blockquote>
          </td>
        </tr>
      </table>
      <table width="100%" cellpadding="5" cellspacing="5" border="0">
       <a name="dispatcher"></a>       
        <tr> 
          <td bgcolor="#333366" class="title">Dispatcher Servlet</td>
        </tr>
        <tr> 
          <td height="45"> 
            <blockquote>
	     Due to the functioning of some wfs clients, the 0.98 release
	     introduces the Dispatcher servlets, which can be used to make
	     GeoServer respond just like a cgi script to get requests.  This
	     is actually not officially part of the WFS specification, but 
	     all the spec examples use the same base URL, complete cgi style,
	     so it is understandable why some wfs clients would use this
	     shortcut.  To make use of the Dispatcher servlet you can use
	     either <i>http://<b>SERVER_ADDRESS</b>:</i><i><b>SERVER_PORT
	     </b>/geoserver/Dispatcher?</i> or  
	     <i>http://<b>SERVER_ADDRESS</b>:</i><i><b>SERVER_PORT</b>
	     /geoserver/wfs?</i>, to look even more like a cgi script.
	     If you'd like to change the base name from wfs you only need
	     edit the web.xml file in geoserver/misc/documents.  
	     Using the dispatcher is as simple as the following series of 
	     requests:

	     
	      <blockquote>
                <p><i>http://openplans.org:8080/geoserver/wfs?request=GetCapabilities</i></p>
              </blockquote>
	       <blockquote>
                <p><i>http://openplans.org:8080/geoserver/wfs?request=DescribeFeatureType&amp;typename=topp:rail</i></p>
              </blockquote>
	       <blockquote>
                <p><i>http://openplans.org:8080/geoserver/wfs?request=GetFeature&amp;typename=topp:rail</i></p>
              </blockquote>
	   </blockquote>
          </td>
        </tr>
      </table>

 </td>
  </tr>
</table>
</body><!-- #EndTemplate --></html>
